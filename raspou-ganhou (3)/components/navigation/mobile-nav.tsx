"use client"

import { Gamepad2, ShoppingCart, Wallet, User } from "lucide-react"

interface MobileNavProps {
  isAuthenticated: boolean
  onAuthRequired: () => void
  onNavigate: (page: string) => void
}

/**
 * Navega√ß√£o inferior para dispositivos m√≥veis
 *
 * FUNCIONALIDADES:
 * - 4 √≠cones principais de navega√ß√£o
 * - Verifica√ß√£o de autentica√ß√£o
 * - Anima√ß√µes e feedback visual
 * - Posicionamento fixo na parte inferior
 *
 * √çCONES E NAVEGA√á√ÉO:
 * - üéÆ Gamepad: Home/Jogos
 * - üõí Carrinho: P√°gina do carrinho
 * - üí∞ Carteira: Centro, destaque (p√°gina da carteira)
 * - üë§ Usu√°rio: Configura√ß√µes
 *
 * REGRAS:
 * - Apenas Home √© acess√≠vel sem login
 * - Outras p√°ginas requerem autentica√ß√£o
 * - Carteira tem destaque visual (maior, centro)
 *
 * DESIGN:
 * - Fundo preto com blur
 * - Anima√ß√µes hover/active
 * - Responsivo apenas para mobile
 */
export function MobileNav({ isAuthenticated, onAuthRequired, onNavigate }: MobileNavProps) {
  /**
   * Verifica se usu√°rio est√° logado antes de executar a√ß√£o
   * Se n√£o estiver, abre modal de login
   *
   * @param action - Fun√ß√£o a ser executada se autenticado
   */
  const handleProtectedAction = (action: () => void) => {
    if (isAuthenticated) {
      action()
    } else {
      onAuthRequired() // Abre modal de login
    }
  }

  return (
    <nav className="fixed bottom-0 left-0 right-0 bg-black/95 backdrop-blur-md md:hidden border-t border-gray-800 animate-in slide-in-from-bottom duration-500 delay-1000">
      <div className="flex items-center justify-around py-2 px-1">
        {/* HOME/JOGOS - Sempre acess√≠vel */}
        <button
          className="flex flex-col items-center p-2 text-green-400 transition-all duration-300 hover:scale-110 active:scale-95"
          onClick={() => onNavigate("home")}
        >
          <Gamepad2 className="w-6 h-6 transition-transform duration-300 hover:rotate-12" />
        </button>

        {/* CARRINHO - Requer autentica√ß√£o */}
        <button
          className="flex flex-col items-center p-2 text-gray-400 transition-all duration-300 hover:text-gray-200 hover:scale-110 active:scale-95"
          onClick={() => handleProtectedAction(() => onNavigate("cart"))}
        >
          <ShoppingCart className="w-6 h-6 transition-transform duration-300 hover:rotate-12" />
        </button>

        {/* CARTEIRA - Bot√£o central destacado, requer autentica√ß√£o */}
        <button
          className="flex items-center justify-center w-12 h-12 bg-green-500 rounded-full -mt-2 transition-all duration-300 hover:bg-green-600 hover:scale-110 active:scale-95 shadow-lg shadow-green-500/25 group"
          onClick={() => handleProtectedAction(() => onNavigate("wallet"))}
        >
          <Wallet className="w-6 h-6 text-white transition-transform duration-300 group-hover:scale-110" />
        </button>

        {/* CONFIGURA√á√ïES - Requer autentica√ß√£o */}
        <button
          className="flex flex-col items-center p-2 text-gray-400 transition-all duration-300 hover:text-gray-200 hover:scale-110 active:scale-95"
          onClick={() => handleProtectedAction(() => onNavigate("settings"))}
        >
          <User className="w-6 h-6 transition-transform duration-300 hover:rotate-12" />
        </button>
      </div>
    </nav>
  )
}
